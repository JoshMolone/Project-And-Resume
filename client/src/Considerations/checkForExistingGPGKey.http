Open Terminal.

Use the gpg --list-secret-keys --keyid-format LONG command to list GPG keys for which you have both a public and private key. A private key is required for signing commits or tags.

$ gpg --list-secret-keys --keyid-format LONG
Note: Some GPG installations on Linux may require you to use gpg2 --list-keys --keyid-format LONG to view a list of your existing keys instead. In this case you will also need to configure Git to use gpg2 by running git config --global gpg.program gpg2.

Check the command output to see if you have a GPG key pair.

If there are no GPG key pairs or you don't want to use any that are available for signing commits and tags, then generate a new GPG key.
If there's an existing GPG key pair and you want to use it to sign commits and tags, then add your GPG key to your GitHub account.